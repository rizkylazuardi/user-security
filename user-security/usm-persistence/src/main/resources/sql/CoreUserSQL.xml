<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.anabatic.usm.persistence.dao.CoreUserMapper">
	<cache />
	
	<resultMap type="CoreUser" id="UserResult">
		<result property="username" column="username"/>
		<result property="password" column="password"/>
		<result property="firstName" column="first_name"/>
		<result property="middleName" column="middle_name"/>
		<result property="lastName" column="last_name"/>
		<result property="email" column="email"/>
		<result property="msisdn" column="msisdn"/>
		<result property="status" column="status"/>
		<result property="facebook" column="facebook"/>
		<result property="secQuestion" column="sec_question"/>
		<result property="secAnswer" column="sec_answer"/>
		<result property="lastLogon" column="last_logon"/>
		<result property="activeBranch" column="activeBranch"/>
		<result property="credentialsNonExpired" column="credentials_non_expired"/>
		<result property="loginAttempt" column="login_attempt"/>
		<collection property="activeRole" column="id" ofType="CoreRole" resultMap="RoleResult"/>
	</resultMap>
	
	<resultMap type="CoreRole" id="RoleResult">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="description_en" column="description_en"/>
	</resultMap>
	
	
	<sql id="fieldNames">
		(<!-- authoriser,authorize_time, -->created_by,created_time,status,updated_by,updated_time,version,
			account_enabled,account_non_expired,account_non_locked,activebranch,credentials_non_expired,			
				email,facebook,first_name,ip_address,last_change_password,			
					last_name,login_attempt,middle_name,msisdn,password,password_hint,password_salt,personnel_code,preferred_locale,sec_answer,			
		sec_question,session_id,session_timeout,username,active_role_id,is_activated,activated_date)
	</sql>
	<sql id="valueName">
		(<!-- '${authoriser}',#{authorizeTime}, -->'${createdBy}',#{createdTime},'${status}','${updatedBy}',#{updatedTime},#{version},
		#{accountEnabled},#{accountNonExpired},#{accountNonLocked},'${activeBranch}',#{credentialsNonExpired},
		'${email}','${facebook}','${firstName}','${ipAddress}',#{lastChangePassword},
		'${lastName}',#{loginAttempt},'${middleName}','${msisdn}','${password}','${passwordHint}','${passwordSalt}','${personnelCode}','${preferredLocale}','${secAnswer}',
		'${secQuestion.value}','${session}','${sessionTimeout}','${username}',#{activeRole.id},#{isActivated},#{activated_date}
		)
	</sql>
	<sql id="updateFieldName">
				status = '${status}',
				updated_by='${updatedBy}',
				updated_time=#{updatedTime},
				version=#{version},
				account_enabled=#{accountEnabled},
				account_non_locked=#{accountNonLocked},
				activebranch='${activeBranch}',
				credentials_non_expired=#{credentialsNonExpired}, 
				email='${email}',
				facebook='${facebook}',
				first_name='${firstName}',
				ip_address='${ipAddress}',
				last_name='${lastName}',
				middle_name='${middleName}',
				msisdn='${msisdn}',
				personnel_code='${personnelCode}', 
				"username" = '${username}', 
				"preferred_locale" = '${preferredLocale}' , 
				"sec_answer" = '${secAnswer}', 
				"sec_question" = '${secQuestion.value}',
				"session_timeout" = '${sessionTimeout}', 
				account_non_expired = #{accountNonExpired}, 
				"is_activated" = #{isActivated}, 
				"active_role_id" = #{activeRole.id}
	</sql>
	<select id="findAll" resultType="CoreUser">
		<include refid="Generic.findAll"></include>
	</select>
	<insert id="insert" >
		<include refid="Generic.insert">
			<property name="fieldNames" value="com.anabatic.usm.persistence.dao.CoreUserMapper.fieldNames"/>
			<property name="valueName" value="com.anabatic.usm.persistence.dao.CoreUserMapper.valueName"/>
			<property name="updateFieldName" value="com.anabatic.usm.persistence.dao.CoreUserMapper.updateFieldName"/>
		</include>
	</insert>
	<select id="get" resultType="CoreUser">
		<include refid="Generic.get"></include>
	</select>
	<delete id="delete">
		<include refid="Generic.delete"></include>
	</delete>
	<select id="getCountUser" resultType="java.lang.Integer">
		select count(1) from core_user 
	</select>
	<select id="getByUsername" resultType="CoreUser">
		select * from core_user where username = #{username} AND status='LIVE'
	</select>
	<select id="getById" resultType="CoreUser">
		select * from core_user where id = #{id} AND status='LIVE'
	</select>
	
	<select id="getAllUser" resultMap="UserResult">
	SELECT a.username, a.password, a.first_name, a.middle_name, a.last_name, a.email, a.msisdn, a.status, a.active_role_id,
		a.facebook, a.sec_question, a.sec_answer, a.last_logon, a.activebranch, a.credentials_non_expired, a.login_attempt, a.active_role_id, b.name, 
		b.description, b.description_en
	FROM core_user a
	JOIN core_role b on a.active_role_id = b.id WHERE a.status = 'LIVE' order by a.id
	</select>

	<update id="userSoftDelete">
		update core_user set "status" = 'HIST' where id = #{id}
	</update>
	
</mapper>